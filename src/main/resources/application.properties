spring.application.name=spawn
spring.datasource.url=${MYSQL_URL}
spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Database Connection Pooling Configuration (HikariCP - Spring Boot default)
# OPTIMIZED: Reduced from 20 to 10 max connections (saves ~15 MB RAM)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.register-mbeans=false

# JPA/Hibernate Performance Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.batch_size=25
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
# Removed problematic JCache configuration - using simple caching instead
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
# RAM Optimization: Batch fetching improvements
spring.jpa.properties.hibernate.default_batch_fetch_size=16
spring.jpa.properties.hibernate.jdbc.fetch_size=50

# Mail Configuration
spring.jpa.open-in-view=false
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=spawnappmarketing@gmail.com
spring.mail.password=${EMAIL_PASS}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

# Push Notification Configuration
# APNS Configuration for iOS
apns.certificate.path=${APNS_CERTIFICATE}
apns.certificate.password=${CERTIFICATE_PASSWORD}
apns.production=true
apns.bundle.id=${APNS_BUNDLE_ID}

# Google OAuth configuration
google.client.id=${GOOGLE_CLIENT_ID}

# Apple OAuth configuration
apple.client.id=${APPLE_CLIENT_ID}

# Redis Connection
spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}
spring.data.redis.password=${REDIS_PASSWORD}
spring.cache.type=redis

# Redis Connection Pooling (RAM Optimization - saves ~5 MB)
spring.data.redis.lettuce.pool.enabled=true
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=4
spring.data.redis.lettuce.pool.min-idle=2
spring.data.redis.lettuce.pool.max-wait=2000ms

# Cache Configuration
spring.cache.redis.time-to-live=3600000
spring.cache.cache-names=ActivityById,fullActivityById,ActivitiesByOwnerId,feedActivities,ActivitiesInvitedTo,fullActivitiesInvitedTo,calendarActivities,allCalendarActivities,userInterests,activityTypes,userStats,locations,friendRequests,userSocialMedia,locationById,activityTypesByUserId,userStatsById,friendRequestsByUserId,userSocialMediaByUserId

# Firebase Configuration for Android

# Database Migration Configuration - ENABLED
# Using Flyway migrations to handle constraint fixes
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.repair=true
spring.flyway.validate-on-migrate=false

# Fuzzy Search Configuration
# Jaro-Winkler algorithm configuration for user search
fuzzy-search.similarity-threshold=0.6
fuzzy-search.strict-similarity-threshold=0.8
fuzzy-search.max-database-results=100
fuzzy-search.max-final-results=10
fuzzy-search.name-weight=1.0
fuzzy-search.username-weight=1.0
fuzzy-search.prefix-boost=1.2
fuzzy-search.min-query-length=2
fuzzy-search.case-insensitive=true
fuzzy-search.enable-prefix-optimization=true
fuzzy-search.enable-analytics=false

# ============================================================================
# RAM OPTIMIZATION - Tomcat Thread Pool Configuration (saves ~150 MB)
# ============================================================================
server.tomcat.threads.max=50
server.tomcat.threads.min-spare=5
server.tomcat.max-connections=2000
server.tomcat.accept-count=100
server.tomcat.connection-timeout=20000
server.tomcat.keep-alive-timeout=60000
server.tomcat.max-keep-alive-requests=100

# ============================================================================
# RAM OPTIMIZATION - HikariCP Statement Caching (MySQL)
# ============================================================================
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true